package lecture23;

public class Leetcode_51_N_Queen {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n = 4;
		boolean[] [] board = new boolean[n][n];
		Print(board,n,0);
	}
	public static void Print(boolean[][] board,int tq,int row) {
		if(tq==0) { //when all queens are placed base condition
			Display(board);
			return;
		}
		
		for(int col=0;col<board.length;col++) {
			if(issafe(board,row,col)) { 
				board[row][col]=true;
				Print(board,tq-1,row+1);
				board[row][col]=false; //backtracking
			}
		}
	}
	
	public static boolean issafe(boolean[][] board,int row,int col) {
		int r=row;
		
		//up
		while(r>=0) {
			if(board[r][col]==true) {
				return false;
			}
			r--;
		}
		
		//right daigonal
		r=row;
		int c=col;
		while(r>=0 && c<board.length) {
			if(board[r][c]==true) {
				return false;
			}
			r--;
			c++;
		}
		//left daigonal
		r=row;
		c=col;
		while(r>=0 && c>=0) {
			if(board[r][c] == true) {
				return false;
			}
			c--;
			r--;
		}
		return true;
	}
	
	public static void Display(boolean[][] board) {
		for(int i=0;i<board.length;i++) {
			for(int j=0;j<board.length;j++) {
				System.out.print(board[i][j]+" ");
			}
			System.out.println();
		}
		System.out.println();
	}

}
